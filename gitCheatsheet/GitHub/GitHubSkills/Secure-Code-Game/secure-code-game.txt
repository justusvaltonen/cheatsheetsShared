
Created:	08.01.2024
################################################################################################
https://github.com/skills/secure-code-game                          (1)
  https://github.com/dduzgun-security/secure-code-game-action       (1.1)
  https://github.com/skills/secure-code-game/blob/main/.devcontainer/devcontainer.json  (1.2)
  https://github.com/skills/secure-code-game/discussions                                (1.3)
  https://go.dev/dl/                                                                    (1.4)
  https://packages.ubuntu.com/focal/libsasl2-2                                          (1.5)

https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces       (2.1)
https://docs.github.com/en/billing/managing-billing-for-github-codespaces/managing-the-spending-limit-for-github-codespaces     (2.2) Nothing useful
------------------------------------------------------------------------------------------------

Seems there is pure hell to come. Intentionally bad repo playingfield. Good thing we have dependabot to spot weaknesses.
My approach at first at least is to try to spot things without assisting SW. Let's see how many things I know. Shouldn't be too many.


    Who is this for: Developers, students.
    What you'll learn: How to spot and fix vulnerable patterns in real-world code, build security into your workflows, and understand security alerts generated against your code.
    What you'll build: You will develop fixes on functional but vulnerable code.
    
    Prerequisites: For the first season, you will need some knowledge of python3 for most levels and C for Level 2. For the second season, you will need some knowledge of GitHub Actions for level 1, go for level 2, python3 for level 3, and javascript for levels 4 and 5.
    
    How long: Each season is five levels long and takes 2-9 hours to complete. The complete course has 2 seasons.

My potentially missing knowledge:
python3     --> Depends a lot on the level needed
C           --> Even tho I know this, there are many things that I don't know
GH-Actions  --> Hey, I did the tutorial, so I should be good to go, right? Missing all knowledge basically, or so I think
GO          --> Depends a lot what is wanted / needed
JS          --> I know some, but new frameworks are constantly added. Also I don't know the core functionality. Let's see.


Recommended addons:
github.copilot-labs
    --> Possibly needs a payment

alexcvzz.vscode-sqlite
    --> Sounds good. Some DB visualising addon.


-Already annoyed. I was planning to use my free accounts codespaces, but then it's stated in the first page that only 1 hour is available.
-Following the link provided, I get to a page with no info about the usage limits, but bunch of other links. It would be nice to say so in the description instead of bouncing users around.
-(2.1) States that we have 120 h / month that we can use. Also it states that my free space will be filled no matter what. There is no way to prevent lockdown of the codespaces unless you want to pay. For now, I don't have anything to pay for. Practising using UI that is a bit complex for the statement of easy tool to use.
    --> Now that I read the instructions again, I can see that there was mention about 60 HOURS instead of minutes. This comes from the default container that is used that takes 2 X actual time since 2 cores are in use. Be quick or be blocked.
-Create codespace on main branch


-Anyhuu... There is a definition to GH-Actions that are in use. You can find them at (1.1).
-You can find an example devcontainer automation file at (1.2) if you find a need to install something to your local instead of the codespace version.
-Inside (1.2) you can find the content for this whole CTF if we can call it that.
-You can potentially get help from (1.3)


Doing it locally
  Install these
    python-ldap
      OpenLDAP Headers
        libldap2-dev
        libsasl2-dev            --> Something relating to security (1.4)
    pyOpenSSL
      Command:
        pip3 install pyOpenSSL
    Optional:
      github.copilot-labs       --> Not available unless using copilot
      alexcvzz.vscode-sqlite    --> Available, looks useful based on demo
    In VSCode editor extensions:
      ms-python.python
      ms-python.vscode-pylance
      ms-vscode.cpptools-extension-pack
      redhat.vscode-yaml
      golang.go

-The reason for doing those installs is possibly that we are using python packet manager software instead of the typical whatever you use, for me, apt
-Once that is done and you cloned the repo to local, you need to run the dependencies by running the following command on local repository root:
    pip3 install -r requirements.txt

-It's possible that GO doesn't want to work unless something extra is done. Check out (1.4)
-I know I have Node in each of my computers, but not everyone does. Installing is easy if I recall well. There may be a catch that there are 2 node places you can use and the other one is the official one. Try to find out which is the right one

-The manual says that the following needs installing when using node:
    npm install --prefix Season-2/Level-4/ Season-2/Level-4/ && npm install --global mocha

-I find this odd, since I usually just do the command 'npm i' in the project root and all works. Whole lot of configuring on the recommended install command.



################################################################################################
## End of File
################################################################################################

